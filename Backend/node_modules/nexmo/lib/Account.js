"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Account = function () {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition Account options.
   */
  function Account(credentials) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Account);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options);
  }

  /**
   * TODO: document
   */


  _createClass(Account, [{
    key: "checkBalance",
    value: function checkBalance() {
      this._nexmo.checkBalance.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "updatePassword",
    value: function updatePassword() {
      this._nexmo.changePassword.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "updateSMSCallback",
    value: function updateSMSCallback() {
      this._nexmo.changeMoCallbackUrl.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "updateDeliveryReceiptCallback",
    value: function updateDeliveryReceiptCallback() {
      this._nexmo.changeDrCallbackUrl.apply(this._nexmo, arguments);
    }
  }, {
    key: "topUp",
    value: function topUp(trx, callback) {
      return this.options.rest.postUseQueryString("/account/top-up", { trx: trx }, callback);
    }
  }]);

  return Account;
}();

exports.default = Account;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BY2NvdW50LmpzIl0sIm5hbWVzIjpbIkFjY291bnQiLCJjcmVkZW50aWFscyIsIm9wdGlvbnMiLCJjcmVkcyIsIl9uZXhtbyIsIm5leG1vT3ZlcnJpZGUiLCJpbml0aWFsaXplIiwiYXBpS2V5IiwiYXBpU2VjcmV0IiwiY2hlY2tCYWxhbmNlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJjaGFuZ2VQYXNzd29yZCIsImNoYW5nZU1vQ2FsbGJhY2tVcmwiLCJjaGFuZ2VEckNhbGxiYWNrVXJsIiwidHJ4IiwiY2FsbGJhY2siLCJyZXN0IiwicG9zdFVzZVF1ZXJ5U3RyaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQTs7Ozs7Ozs7SUFFTUEsTztBQUNKOzs7Ozs7QUFNQSxtQkFBWUMsV0FBWixFQUF1QztBQUFBLFFBQWRDLE9BQWMsdUVBQUosRUFBSTs7QUFBQTs7QUFDckMsU0FBS0MsS0FBTCxHQUFhRixXQUFiO0FBQ0EsU0FBS0MsT0FBTCxHQUFlQSxPQUFmOztBQUVBO0FBQ0EsU0FBS0UsTUFBTCxHQUFjLEtBQUtGLE9BQUwsQ0FBYUcsYUFBYixtQkFBZDs7QUFFQSxTQUFLRCxNQUFMLENBQVlFLFVBQVosQ0FDRSxLQUFLSCxLQUFMLENBQVdJLE1BRGIsRUFFRSxLQUFLSixLQUFMLENBQVdLLFNBRmIsRUFHRSxLQUFLTixPQUhQO0FBS0Q7O0FBRUQ7Ozs7Ozs7bUNBR2U7QUFDYixXQUFLRSxNQUFMLENBQVlLLFlBQVosQ0FBeUJDLEtBQXpCLENBQStCLEtBQUtOLE1BQXBDLEVBQTRDTyxTQUE1QztBQUNEOztBQUVEOzs7Ozs7cUNBR2lCO0FBQ2YsV0FBS1AsTUFBTCxDQUFZUSxjQUFaLENBQTJCRixLQUEzQixDQUFpQyxLQUFLTixNQUF0QyxFQUE4Q08sU0FBOUM7QUFDRDs7QUFFRDs7Ozs7O3dDQUdvQjtBQUNsQixXQUFLUCxNQUFMLENBQVlTLG1CQUFaLENBQWdDSCxLQUFoQyxDQUFzQyxLQUFLTixNQUEzQyxFQUFtRE8sU0FBbkQ7QUFDRDs7QUFFRDs7Ozs7O29EQUdnQztBQUM5QixXQUFLUCxNQUFMLENBQVlVLG1CQUFaLENBQWdDSixLQUFoQyxDQUFzQyxLQUFLTixNQUEzQyxFQUFtRE8sU0FBbkQ7QUFDRDs7OzBCQUVLSSxHLEVBQUtDLFEsRUFBVTtBQUNuQixhQUFPLEtBQUtkLE9BQUwsQ0FBYWUsSUFBYixDQUFrQkMsa0JBQWxCLENBQ0wsaUJBREssRUFFTCxFQUFFSCxRQUFGLEVBRkssRUFHTEMsUUFISyxDQUFQO0FBS0Q7Ozs7OztrQkFHWWhCLE8iLCJmaWxlIjoiQWNjb3VudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgbmV4bW8gZnJvbSBcIi4vaW5kZXhcIjtcblxuY2xhc3MgQWNjb3VudCB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0NyZWRlbnRpYWxzfSBjcmVkZW50aWFsc1xuICAgKiAgICBjcmVkZW50aWFscyB0byBiZSB1c2VkIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgQVBJLlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiAgICBBZGRpdGlvbiBBY2NvdW50IG9wdGlvbnMuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihjcmVkZW50aWFscywgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5jcmVkcyA9IGNyZWRlbnRpYWxzO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cbiAgICAvLyBVc2VkIHRvIGZhY2lsaXRhdGUgdGVzdGluZyBvZiB0aGUgY2FsbCB0byB0aGUgdW5kZXJseWluZyBvYmplY3RcbiAgICB0aGlzLl9uZXhtbyA9IHRoaXMub3B0aW9ucy5uZXhtb092ZXJyaWRlIHx8IG5leG1vO1xuXG4gICAgdGhpcy5fbmV4bW8uaW5pdGlhbGl6ZShcbiAgICAgIHRoaXMuY3JlZHMuYXBpS2V5LFxuICAgICAgdGhpcy5jcmVkcy5hcGlTZWNyZXQsXG4gICAgICB0aGlzLm9wdGlvbnNcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBjaGVja0JhbGFuY2UoKSB7XG4gICAgdGhpcy5fbmV4bW8uY2hlY2tCYWxhbmNlLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICB1cGRhdGVQYXNzd29yZCgpIHtcbiAgICB0aGlzLl9uZXhtby5jaGFuZ2VQYXNzd29yZC5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgdXBkYXRlU01TQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fbmV4bW8uY2hhbmdlTW9DYWxsYmFja1VybC5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgdXBkYXRlRGVsaXZlcnlSZWNlaXB0Q2FsbGJhY2soKSB7XG4gICAgdGhpcy5fbmV4bW8uY2hhbmdlRHJDYWxsYmFja1VybC5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIHRvcFVwKHRyeCwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLnJlc3QucG9zdFVzZVF1ZXJ5U3RyaW5nKFxuICAgICAgXCIvYWNjb3VudC90b3AtdXBcIixcbiAgICAgIHsgdHJ4IH0sXG4gICAgICBjYWxsYmFja1xuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWNjb3VudDtcbiJdfQ==